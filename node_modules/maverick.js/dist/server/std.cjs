'use strict';

var chunkBCLCMONJ_cjs = require('./chunks/chunk-BCLCMONJ.cjs');
var chunkH22IBEBC_cjs = require('./chunks/chunk-H22IBEBC.cjs');
var chunkAH67QMAU_cjs = require('./chunks/chunk-AH67QMAU.cjs');

// src/std/aria.ts
function ariaBool(value) {
  return value ? "true" : "false";
}

// src/std/disposal.ts
function createDisposalBin() {
  const disposal = /* @__PURE__ */ new Set();
  return {
    add(...callbacks) {
      for (const callback of callbacks)
        disposal.add(callback);
    },
    empty() {
      for (const callback of disposal)
        callback();
      disposal.clear();
    }
  };
}
function useDisposalBin() {
  const disposal = createDisposalBin();
  chunkAH67QMAU_cjs.onDispose(disposal.empty);
  return disposal;
}

// src/std/host.ts
function useHostConnected() {
  const instance = chunkH22IBEBC_cjs.getCustomElementInstance();
  if (!instance) {
    throw Error(
      ""
    );
  }
  return () => instance.host.$connected();
}

// src/std/object.ts
function keysOf(obj) {
  return Object.keys(obj);
}
function mergeProperties(...sources) {
  const target = {};
  for (let i = 0; i < sources.length; i++) {
    const source = sources[i];
    if (source) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    }
  }
  return target;
}
function pick(source, props) {
  const target = {};
  for (const prop of props) {
    Object.defineProperty(target, prop, Object.getOwnPropertyDescriptor(source, prop));
  }
  return target;
}
function omit(source, props) {
  return pick(
    source,
    keysOf(source).filter((key) => !props.includes(key))
  );
}

// src/std/promise.ts
function deferredPromise() {
  let resolve, reject;
  const promise = new Promise((res, rej) => {
    resolve = res;
    reject = rej;
  });
  return { promise, resolve, reject };
}
function timedPromise(promise, timeout, timeoutMsg) {
  const timer = new Promise((_, reject) => {
    const timerId = setTimeout(() => {
      clearTimeout(timerId);
      reject(timeoutMsg);
    }, timeout);
  });
  return Promise.race([promise, timer]);
}

// src/std/timing.ts
function waitTimeout(delay) {
  return new Promise((resolve) => setTimeout(resolve, delay));
}
function waitAnimationFrame(callback) {
  return Promise.resolve();
}
function animationFrameThrottle(func) {
  {
    const raf = chunkAH67QMAU_cjs.noop;
    raf.cancel = chunkAH67QMAU_cjs.noop;
    raf.pending = () => false;
    return raf;
  }
}
function waitIdlePeriod(callback, options) {
  return Promise.resolve();
}

Object.defineProperty(exports, 'DOMEvent', {
  enumerable: true,
  get: function () { return chunkBCLCMONJ_cjs.DOMEvent; }
});
Object.defineProperty(exports, 'appendTriggerEvent', {
  enumerable: true,
  get: function () { return chunkBCLCMONJ_cjs.appendTriggerEvent; }
});
Object.defineProperty(exports, 'attachDeclarativeShadowDOM', {
  enumerable: true,
  get: function () { return chunkBCLCMONJ_cjs.attachDeclarativeShadowDOM; }
});
Object.defineProperty(exports, 'camelToKebabCase', {
  enumerable: true,
  get: function () { return chunkBCLCMONJ_cjs.camelToKebabCase; }
});
Object.defineProperty(exports, 'camelToTitleCase', {
  enumerable: true,
  get: function () { return chunkBCLCMONJ_cjs.camelToTitleCase; }
});
Object.defineProperty(exports, 'createComment', {
  enumerable: true,
  get: function () { return chunkBCLCMONJ_cjs.createComment; }
});
Object.defineProperty(exports, 'createEvent', {
  enumerable: true,
  get: function () { return chunkBCLCMONJ_cjs.createEvent; }
});
Object.defineProperty(exports, 'createFragment', {
  enumerable: true,
  get: function () { return chunkBCLCMONJ_cjs.createFragment; }
});
Object.defineProperty(exports, 'dispatchEvent', {
  enumerable: true,
  get: function () { return chunkBCLCMONJ_cjs.dispatchEvent; }
});
Object.defineProperty(exports, 'findTriggerEvent', {
  enumerable: true,
  get: function () { return chunkBCLCMONJ_cjs.findTriggerEvent; }
});
Object.defineProperty(exports, 'flattenArray', {
  enumerable: true,
  get: function () { return chunkBCLCMONJ_cjs.flattenArray; }
});
Object.defineProperty(exports, 'getOriginEvent', {
  enumerable: true,
  get: function () { return chunkBCLCMONJ_cjs.getOriginEvent; }
});
Object.defineProperty(exports, 'getSlottedChildren', {
  enumerable: true,
  get: function () { return chunkBCLCMONJ_cjs.getSlottedChildren; }
});
Object.defineProperty(exports, 'hasTriggerEvent', {
  enumerable: true,
  get: function () { return chunkBCLCMONJ_cjs.hasTriggerEvent; }
});
Object.defineProperty(exports, 'isDOMElement', {
  enumerable: true,
  get: function () { return chunkBCLCMONJ_cjs.isDOMElement; }
});
Object.defineProperty(exports, 'isDOMEvent', {
  enumerable: true,
  get: function () { return chunkBCLCMONJ_cjs.isDOMEvent; }
});
Object.defineProperty(exports, 'isDOMFragment', {
  enumerable: true,
  get: function () { return chunkBCLCMONJ_cjs.isDOMFragment; }
});
Object.defineProperty(exports, 'isDOMNode', {
  enumerable: true,
  get: function () { return chunkBCLCMONJ_cjs.isDOMNode; }
});
Object.defineProperty(exports, 'isKeyboardClick', {
  enumerable: true,
  get: function () { return chunkBCLCMONJ_cjs.isKeyboardClick; }
});
Object.defineProperty(exports, 'isKeyboardEvent', {
  enumerable: true,
  get: function () { return chunkBCLCMONJ_cjs.isKeyboardEvent; }
});
Object.defineProperty(exports, 'isMouseEvent', {
  enumerable: true,
  get: function () { return chunkBCLCMONJ_cjs.isMouseEvent; }
});
Object.defineProperty(exports, 'isPointerEvent', {
  enumerable: true,
  get: function () { return chunkBCLCMONJ_cjs.isPointerEvent; }
});
Object.defineProperty(exports, 'isTouchEvent', {
  enumerable: true,
  get: function () { return chunkBCLCMONJ_cjs.isTouchEvent; }
});
Object.defineProperty(exports, 'kebabToCamelCase', {
  enumerable: true,
  get: function () { return chunkBCLCMONJ_cjs.kebabToCamelCase; }
});
Object.defineProperty(exports, 'kebabToPascalCase', {
  enumerable: true,
  get: function () { return chunkBCLCMONJ_cjs.kebabToPascalCase; }
});
Object.defineProperty(exports, 'kebabToTitleCase', {
  enumerable: true,
  get: function () { return chunkBCLCMONJ_cjs.kebabToTitleCase; }
});
Object.defineProperty(exports, 'listenEvent', {
  enumerable: true,
  get: function () { return chunkBCLCMONJ_cjs.listenEvent; }
});
Object.defineProperty(exports, 'lowercaseFirstLetter', {
  enumerable: true,
  get: function () { return chunkBCLCMONJ_cjs.lowercaseFirstLetter; }
});
Object.defineProperty(exports, 'run', {
  enumerable: true,
  get: function () { return chunkBCLCMONJ_cjs.run; }
});
Object.defineProperty(exports, 'runAll', {
  enumerable: true,
  get: function () { return chunkBCLCMONJ_cjs.runAll; }
});
Object.defineProperty(exports, 'setAttribute', {
  enumerable: true,
  get: function () { return chunkBCLCMONJ_cjs.setAttribute; }
});
Object.defineProperty(exports, 'setStyle', {
  enumerable: true,
  get: function () { return chunkBCLCMONJ_cjs.setStyle; }
});
Object.defineProperty(exports, 'toggleClass', {
  enumerable: true,
  get: function () { return chunkBCLCMONJ_cjs.toggleClass; }
});
Object.defineProperty(exports, 'trimTrailingSemicolon', {
  enumerable: true,
  get: function () { return chunkBCLCMONJ_cjs.trimTrailingSemicolon; }
});
Object.defineProperty(exports, 'uppercaseFirstChar', {
  enumerable: true,
  get: function () { return chunkBCLCMONJ_cjs.uppercaseFirstChar; }
});
Object.defineProperty(exports, 'walkTriggerEventChain', {
  enumerable: true,
  get: function () { return chunkBCLCMONJ_cjs.walkTriggerEventChain; }
});
Object.defineProperty(exports, 'wasEnterKeyPressed', {
  enumerable: true,
  get: function () { return chunkBCLCMONJ_cjs.wasEnterKeyPressed; }
});
Object.defineProperty(exports, 'wasEscapeKeyPressed', {
  enumerable: true,
  get: function () { return chunkBCLCMONJ_cjs.wasEscapeKeyPressed; }
});
Object.defineProperty(exports, 'createRegex', {
  enumerable: true,
  get: function () { return chunkAH67QMAU_cjs.createRegex; }
});
Object.defineProperty(exports, 'isArray', {
  enumerable: true,
  get: function () { return chunkAH67QMAU_cjs.isArray; }
});
Object.defineProperty(exports, 'isBoolean', {
  enumerable: true,
  get: function () { return chunkAH67QMAU_cjs.isBoolean; }
});
Object.defineProperty(exports, 'isFunction', {
  enumerable: true,
  get: function () { return chunkAH67QMAU_cjs.isFunction; }
});
Object.defineProperty(exports, 'isNil', {
  enumerable: true,
  get: function () { return chunkAH67QMAU_cjs.isNil; }
});
Object.defineProperty(exports, 'isNull', {
  enumerable: true,
  get: function () { return chunkAH67QMAU_cjs.isNull; }
});
Object.defineProperty(exports, 'isNumber', {
  enumerable: true,
  get: function () { return chunkAH67QMAU_cjs.isNumber; }
});
Object.defineProperty(exports, 'isObject', {
  enumerable: true,
  get: function () { return chunkAH67QMAU_cjs.isObject; }
});
Object.defineProperty(exports, 'isString', {
  enumerable: true,
  get: function () { return chunkAH67QMAU_cjs.isString; }
});
Object.defineProperty(exports, 'isUndefined', {
  enumerable: true,
  get: function () { return chunkAH67QMAU_cjs.isUndefined; }
});
Object.defineProperty(exports, 'isWindow', {
  enumerable: true,
  get: function () { return chunkAH67QMAU_cjs.isWindow; }
});
Object.defineProperty(exports, 'noop', {
  enumerable: true,
  get: function () { return chunkAH67QMAU_cjs.noop; }
});
Object.defineProperty(exports, 'unwrap', {
  enumerable: true,
  get: function () { return chunkAH67QMAU_cjs.unwrap; }
});
Object.defineProperty(exports, 'unwrapDeep', {
  enumerable: true,
  get: function () { return chunkAH67QMAU_cjs.unwrapDeep; }
});
exports.animationFrameThrottle = animationFrameThrottle;
exports.ariaBool = ariaBool;
exports.createDisposalBin = createDisposalBin;
exports.deferredPromise = deferredPromise;
exports.keysOf = keysOf;
exports.mergeProperties = mergeProperties;
exports.omit = omit;
exports.pick = pick;
exports.timedPromise = timedPromise;
exports.useDisposalBin = useDisposalBin;
exports.useHostConnected = useHostConnected;
exports.waitAnimationFrame = waitAnimationFrame;
exports.waitIdlePeriod = waitIdlePeriod;
exports.waitTimeout = waitTimeout;
