import type { FullscreenAdapter } from '../../../../../foundation/fullscreen/fullscreen';
import type { MediaContext } from '../../../context';
declare global {
    interface GlobalEventHandlersEventMap {
        webkitpresentationmodechanged: Event;
    }
}
/**
 * Contains the logic for handling presentation modes on Safari. This hook is used as a fallback
 * for when the native Fullscreen API is not available (i.e., iOS Safari).
 *
 * @see {@link https://developer.apple.com/documentation/webkitjs/htmlvideoelement/1631913-webkitpresentationmode}
 */
export declare function useVideoPresentation(video: HTMLVideoElement, { $player, logger, delegate }: MediaContext): VideoPresentationAdapter;
export interface VideoPresentationAdapter extends FullscreenAdapter {
    /**
     * The current presentation mode, possible values include `inline`, `picture-in-picture` and
     * `fullscreen`.
     *
     * @signal
     * @defaultValue 'inline'
     * @see {@link https://developer.apple.com/documentation/webkitjs/htmlvideoelement/1631913-webkitpresentationmode}
     */
    readonly mode: WebKitPresentationMode;
}
