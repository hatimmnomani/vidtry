import { b } from './chunk-P2F2OUSM.js';
import { E as E$1, x } from './chunk-SEVK3JXX.js';
import { j, c, v } from './chunk-OJDYYIWI.js';

function f(t,{$player:o,logger:n,delegate:i}){let e=j("inline"),a=()=>v(t.webkitSetPresentationMode);a()&&E$1(t,"webkitpresentationmodechanged",m);function m(d){e.set(t.webkitPresentationMode),x(o(),"video-presentation-change",{detail:e(),trigger:d}),i.dispatch("fullscreen-change",{detail:e()==="fullscreen",trigger:d});}return {get mode(){return e()},get active(){return e()==="fullscreen"},get supported(){return c(a)},async enter(){c(e)!=="fullscreen"&&await t.webkitSetPresentationMode("fullscreen");},async exit(){c(e)!=="inline"&&await t.webkitSetPresentationMode("inline");}}}var M=Symbol(0),E,g=class extends b{constructor(n,i){super(n);this[E]=!0;this.fullscreen=f(n,i);}get type(){return "video"}setup(n){super.setup(n),this.type==="video"&&n.delegate.dispatch("provider-setup",{detail:this});}get video(){return this.E}};E=M;

export { M as a, g as b };
