import { isUndefined, isFunction2, isString } from './chunk-DVGRTHY2.js';

// src/utils/support.ts
var UA = navigator?.userAgent.toLowerCase();
var IS_IOS = /iphone|ipad|ipod|ios|crios|fxios/i.test(UA);
var IS_SAFARI = !!window.safari || IS_IOS;
function canOrientScreen() {
  return !isUndefined(screen.orientation) && isFunction2(screen.orientation.lock) && isFunction2(screen.orientation.unlock);
}
function canPlayHLSNatively() {
  const video = document.createElement("video");
  return video.canPlayType("application/vnd.apple.mpegurl").length > 0;
}
function getMediaSource() {
  return window?.MediaSource ?? window?.WebKitMediaSource;
}
function getSourceBuffer() {
  return window?.SourceBuffer ?? window?.WebKitSourceBuffer;
}
function isHLSSupported() {
  const MediaSource = getMediaSource();
  if (isUndefined(MediaSource))
    return false;
  const isTypeSupported = MediaSource && isFunction2(MediaSource.isTypeSupported) && MediaSource.isTypeSupported('video/mp4; codecs="avc1.42E01E,mp4a.40.2"');
  const SourceBuffer = getSourceBuffer();
  const isSourceBufferValid = isUndefined(SourceBuffer) || !isUndefined(SourceBuffer.prototype) && isFunction2(SourceBuffer.prototype.appendBuffer) && isFunction2(SourceBuffer.prototype.remove);
  return !!isTypeSupported && !!isSourceBufferValid;
}

// src/utils/mime.ts
var AUDIO_EXTENSIONS = /\.(m4a|m4b|mp4a|mpga|mp2|mp2a|mp3|m2a|m3a|wav|weba|aac|oga|spx)($|\?)/i;
var AUDIO_TYPES = /* @__PURE__ */ new Set([
  "audio/mpeg",
  "audio/ogg",
  "audio/3gp",
  "audio/mp4",
  "audio/webm",
  "audio/flac"
]);
var VIDEO_EXTENSIONS = /\.(mp4|og[gv]|webm|mov|m4v)(#t=[,\d+]+)?($|\?)/i;
var VIDEO_TYPES = /* @__PURE__ */ new Set([
  "video/mp4",
  "video/webm",
  "video/3gp",
  "video/ogg",
  "video/avi",
  "video/mpeg"
]);
var HLS_VIDEO_EXTENSIONS = /\.(m3u8)($|\?)/i;
var HLS_VIDEO_TYPES = /* @__PURE__ */ new Set([
  "application/vnd.apple.mpegurl",
  "audio/mpegurl",
  "audio/x-mpegurl",
  "application/x-mpegurl",
  "video/x-mpegurl",
  "video/mpegurl",
  "application/mpegurl"
]);
function isHLSSrc({ src, type }) {
  return isString(src) && HLS_VIDEO_EXTENSIONS.test(src) || HLS_VIDEO_TYPES.has(type);
}
function isMediaStream(src) {
  return !isUndefined(window.MediaStream) && src instanceof window.MediaStream;
}

// src/utils/number.ts
function round(num, decimalPlaces = 2) {
  return Number(num.toFixed(decimalPlaces));
}
function getNumberOfDecimalPlaces(num) {
  return String(num).split(".")[1]?.length ?? 0;
}
function clampNumber(min, value, max) {
  return Math.max(min, Math.min(max, value));
}

export { AUDIO_EXTENSIONS, AUDIO_TYPES, HLS_VIDEO_EXTENSIONS, HLS_VIDEO_TYPES, IS_IOS, IS_SAFARI, VIDEO_EXTENSIONS, VIDEO_TYPES, canOrientScreen, canPlayHLSNatively, clampNumber, getNumberOfDecimalPlaces, isHLSSrc, isHLSSupported, isMediaStream, round };
